--üì¶ SERVICES & PLAYER
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UIS = game:GetService("UserInputService")
local VirtualUser = game:GetService("VirtualUser")
local player = Players.LocalPlayer

--üì° REMOTES
local ReplicaSignal = ReplicatedStorage:WaitForChild("ReplicaRemoteEvents"):WaitForChild("Replica_ReplicaSignal")
local HatchRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("Eggs"):WaitForChild("Hatch")
local SpinWheel = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("SpinWheel")
local RedeemRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("RedeemCode")

--üîÅ TOGGLES & EGGS
local toggles = {
    autoTap = false,
    autoHatch = false,
    autoGifts = false,
    autoSpin = false,
    antiAFK = false,
}
local eggList = { "Basic", "Bird", "100K", "Beach", "Winter", "Magma", "Heaven", "Space" }
local selectedEgg = eggList[1]

--üì® NOTIFICATION FUNCTION
local ScreenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
local function createNotification(msg, time)
    local notif = Instance.new("TextLabel", ScreenGui)
    notif.Size = UDim2.new(0, 140, 0, 20)
    notif.Position = UDim2.new(0.5, -70, 0.5, -100)
    notif.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    notif.TextColor3 = Color3.fromRGB(255, 255, 255)
    notif.Text = msg
    notif.TextSize = 11
    notif.Font = Enum.Font.SourceSansBold
    notif.AnchorPoint = Vector2.new(0.5, 0.5)
    notif.BorderSizePixel = 0
    task.delay(time or 2, function() notif:Destroy() end)
end

--üîß FUNCTIONS
local function autoTap()
    createNotification("Auto Tap Enabled", 2)
    while toggles.autoTap do ReplicaSignal:FireServer(2, "Tap") task.wait() end
end

local RunService = game:GetService("RunService")
local lastHatch = 0
local hatchCooldown = 0.2

local function autoHatch()
    createNotification("Auto Hatch Enabled", 2)

    -- üõë Animation override once
    if getgenv then
        getgenv().PlayEggAnimation = function() end
        getgenv().RevealPet = function() end
    end

    -- üëÅÔ∏è‚Äçüó®Ô∏è Remove GUI once if exists
    local gui = player:WaitForChild("PlayerGui"):FindFirstChild("EggHatchGui")
    if gui then gui:Destroy() end

    task.spawn(function()
        while toggles.autoHatch do
            local now = os.clock()
            if now - lastHatch >= hatchCooldown then
                lastHatch = now
                pcall(function()
                    HatchRemote:InvokeServer(selectedEgg, 15)
                end)
            end
            RunService.Heartbeat:Wait()
        end
    end)
end

local function autoClaimGifts()
    createNotification("Claim Gifts Enabled", 2)
    while toggles.autoGifts do
        for i = 1, 12 do ReplicaSignal:FireServer(2, "ClaimGift", "Gift" .. i) task.wait(.2) end
        task.wait(5)
    end
end

local function autoSpin()
    createNotification("Spin Wheel Enabled", 2)
    while toggles.autoSpin do pcall(function() SpinWheel:InvokeServer() end) task.wait() end
end

local function antiAFK()
    createNotification("Anti-AFK Enabled", 2)
    while toggles.antiAFK do
        player.Idled:Wait()
        pcall(function()
            VirtualUser:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
            task.wait(1)
            VirtualUser:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
        end)
    end
end

task.spawn(function()
    createNotification("Redeeming Codes...", 2)
    local codes = { "scramble", "SecretChat", "FlagsBoxes", "Release", "Sorry", "Shutdown", "HeavenArea" }
    for _, code in ipairs(codes) do pcall(function() RedeemRemote:InvokeServer(code) end) task.wait(1) end
end)

--üñºÔ∏è GUI FRAME
ScreenGui.Name = "AutoFarmUI"
local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 140, 0, 220)
Frame.Position = UDim2.new(0.5, -70, 0.5, -110)
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Selectable = true
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)


local closeBtn = Instance.new("TextButton", Frame)
closeBtn.Size = UDim2.new(0, 20, 0, 20)
closeBtn.Position = UDim2.new(1, -24, 0, 2)
closeBtn.Text = "X"
closeBtn.TextSize = 11
closeBtn.BackgroundColor3 = Color3.fromRGB(180, 40, 40)
closeBtn.MouseButton1Click:Connect(function() ScreenGui:Destroy() end)

local minimizeBtn = Instance.new("TextButton", Frame)
minimizeBtn.Size = UDim2.new(0, 20, 0, 20)
minimizeBtn.Position = UDim2.new(1, -48, 0, 2)
minimizeBtn.Text = "-"
minimizeBtn.TextSize = 11
minimizeBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)

local minimized = false

local options = {
    {name = "Tap", flag = "autoTap", func = autoTap},
    {name = "Hatch", flag = "autoHatch", func = autoHatch},
    {name = "Gifts", flag = "autoGifts", func = autoClaimGifts},
    {name = "Spin", flag = "autoSpin", func = autoSpin},
    {name = "AFK", flag = "antiAFK", func = antiAFK},
}

for i, opt in ipairs(options) do
    local btn = Instance.new("TextButton", Frame)
    btn.Size = UDim2.new(0, 120, 0, 18)
    btn.Position = UDim2.new(0, 10, 0, 26 + (i - 1) * 20)
    btn.Text = opt.name .. " [OFF]"
    btn.TextSize = 11
    btn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.MouseButton1Click:Connect(function()
        toggles[opt.flag] = not toggles[opt.flag]
        btn.Text = opt.name .. (toggles[opt.flag] and " [ON]" or " [OFF]")
        if toggles[opt.flag] then task.spawn(opt.func) end
    end)
end

--ü•ö EGG SELECT
local eggLabel = Instance.new("TextLabel", Frame)
eggLabel.Size = UDim2.new(0, 120, 0, 16)
eggLabel.Position = UDim2.new(0, 10, 0, 26 + (#options * 20))
eggLabel.Text = "Egg: " .. selectedEgg
eggLabel.TextSize = 11
eggLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
eggLabel.BackgroundColor3 = Color3.fromRGB(45, 45, 45)

local dropdownBtn = Instance.new("TextButton", Frame)
dropdownBtn.Size = UDim2.new(0, 120, 0, 16)
dropdownBtn.Position = eggLabel.Position + UDim2.new(0, 0, 0, 18)
dropdownBtn.Text = "Choose Egg"
dropdownBtn.TextSize = 11
dropdownBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
dropdownBtn.BackgroundColor3 = Color3.fromRGB(45, 45, 45)

local dropFrame = Instance.new("Frame", Frame)
dropFrame.Size = UDim2.new(0, 120, 0, #eggList * 16)
dropFrame.Position = dropdownBtn.Position + UDim2.new(0, 0, 0, 18)
dropFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
dropFrame.Visible = false

for i, egg in ipairs(eggList) do
    local optBtn = Instance.new("TextButton", dropFrame)
    optBtn.Size = UDim2.new(1, 0, 0, 16)
    optBtn.Position = UDim2.new(0, 0, 0, (i - 1) * 16)
    optBtn.Text = egg
    optBtn.TextSize = 10
    optBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    optBtn.MouseButton1Click:Connect(function()
        selectedEgg = egg
        eggLabel.Text = "Egg: " .. egg
        dropFrame.Visible = false
    end)
end

dropdownBtn.MouseButton1Click:Connect(function()
    dropFrame.Visible = not dropFrame.Visible
end)

--üìâ MINIMIZE SUPPORT
minimizeBtn.MouseButton1Click:Connect(function()
    minimized = not minimized
    if minimized then
        Frame.Size = UDim2.new(0, 140, 0, 30)
        for _, child in ipairs(Frame:GetChildren()) do
            if child ~= closeBtn and child ~= minimizeBtn then
                child.Visible = false
            end
        end
        dropFrame.Visible = false
    else
        Frame.Size = UDim2.new(0, 140, 0, 320)
        for _, child in ipairs(Frame:GetChildren()) do
            child.Visible = true
        end
    end
end)

--üì± DRAGGING FOR MOBILE + PC
local UIS = game:GetService("UserInputService")
local dragging, dragInput, dragStart, startPos

Frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = Frame.Position
        dragInput = input
    end
end)

Frame.InputEnded:Connect(function(input)
    if input == dragInput then
        dragging = false
    end
end)

UIS.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        Frame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)

