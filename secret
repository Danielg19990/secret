--üì¶ SERVICES
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer

--üì° REMOTES
local buyEggRemote = ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Remotes"):WaitForChild("buyegg")

--üîÅ TOGGLES
local toggles = {
    buyWinterEgg = false,
}

--üì® NOTIFICATIONS
local ScreenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
ScreenGui.Name = "WinterEggUI"

local function createNotification(msg, time)
    local notif = Instance.new("TextLabel", ScreenGui)
    notif.Size = UDim2.new(0, 140, 0, 20)
    notif.Position = UDim2.new(0.5, -70, 0.5, -100)
    notif.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    notif.TextColor3 = Color3.fromRGB(255, 255, 255)
    notif.Text = msg
    notif.TextSize = 11
    notif.Font = Enum.Font.SourceSansBold
    notif.AnchorPoint = Vector2.new(0.5, 0.5)
    notif.BorderSizePixel = 0
    task.delay(time or 2, function() notif:Destroy() end)
end

--ü•ö BUY WINTER EGG FUNCTION
local function buyWinterEgg()
    createNotification("Buying Winter Egg...", 2)
    task.spawn(function()
        while toggles.buyWinterEgg do
            local args = {
                { "Winter", "OpenX" }
            }
            pcall(function()
                buyEggRemote:InvokeServer(unpack(args))
            end)
            task.wait(2)
        end
    end)
end

--üéõÔ∏è GUI PANEL
local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 140, 0, 80)
Frame.Position = UDim2.new(0.5, -70, 0.5, -100)
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Frame.BorderSizePixel = 0
Frame.Active = true

local closeBtn = Instance.new("TextButton", Frame)
closeBtn.Size = UDim2.new(0, 20, 0, 20)
closeBtn.Position = UDim2.new(1, -24, 0, 2)
closeBtn.Text = "X"
closeBtn.TextSize = 11
closeBtn.BackgroundColor3 = Color3.fromRGB(180, 40, 40)
closeBtn.MouseButton1Click:Connect(function() ScreenGui:Destroy() end)

local minimizeBtn = Instance.new("TextButton", Frame)
minimizeBtn.Size = UDim2.new(0, 20, 0, 20)
minimizeBtn.Position = UDim2.new(1, -48, 0, 2)
minimizeBtn.Text = "-"
minimizeBtn.TextSize = 11
minimizeBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)

--üß† OPTIONS
local options = {
    {name = "Buy Winter Egg", flag = "buyWinterEgg", func = buyWinterEgg},
}

for i, opt in ipairs(options) do
    local btn = Instance.new("TextButton", Frame)
    btn.Size = UDim2.new(0, 120, 0, 18)
    btn.Position = UDim2.new(0, 10, 0, 26 + (i - 1) * 20)
    btn.Text = opt.name .. " [OFF]"
    btn.TextSize = 11
    btn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.MouseButton1Click:Connect(function()
        toggles[opt.flag] = not toggles[opt.flag]
        btn.Text = opt.name .. (toggles[opt.flag] and " [ON]" or " [OFF]")
        if toggles[opt.flag] then task.spawn(opt.func) end
    end)
end

--üìâ MINIMIZE SUPPORT
local minimized = false
minimizeBtn.MouseButton1Click:Connect(function()
    minimized = not minimized
    if minimized then
        Frame.Size = UDim2.new(0, 140, 0, 30)
        for _, child in ipairs(Frame:GetChildren()) do
            if child ~= closeBtn and child ~= minimizeBtn then
                child.Visible = false
            end
        end
    else
        Frame.Size = UDim2.new(0, 140, 0, 80)
        for _, child in ipairs(Frame:GetChildren()) do
            child.Visible = true
        end
    end
end)

--üì± DRAGGING SUPPORT
local UIS = game:GetService("UserInputService")
local dragging, dragInput, dragStart, startPos

Frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = Frame.Position
        dragInput = input
    end
end)

Frame.InputEnded:Connect(function(input)
    if input == dragInput then
        dragging = false
    end
end)

UIS.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        Frame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)
